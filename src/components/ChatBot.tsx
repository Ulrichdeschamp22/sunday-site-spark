import React, { useState, useRef, useEffect } from 'react';
import { MessageCircle, X, Send, Bot, User } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Input } from '@/components/ui/input';

interface Message {
  id: string;
  text: string;
  isBot: boolean;
  timestamp: Date;
}

const ChatBot = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [messages, setMessages] = useState<Message[]>([
    {
      id: '1',
      text: "ðŸ‘‹ Bonjour ! Je suis l'assistant de l'HÃ´tel RÃ©sidence Sunday. Comment puis-je vous aider ?",
      isBot: true,
      timestamp: new Date()
    }
  ]);
  const [inputValue, setInputValue] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const getKnowledgeBaseResponse = (question: string): string => {
    const lowerQuestion = question.toLowerCase();
    
    // RÃ©ponses basÃ©es sur la knowledge base
    if (lowerQuestion.includes('prix') || lowerQuestion.includes('tarif') || lowerQuestion.includes('coÃ»t')) {
      return "Nos tarifs sont trÃ¨s compÃ©titifs ! Nous proposons des chambres Standard, Double et Suite avec un excellent rapport qualitÃ©-prix. Pour connaÃ®tre nos tarifs exacts, contactez-nous au +225 07 69 69 21 94 ou via WhatsApp.";
    }
    
    if (lowerQuestion.includes('rÃ©server') || lowerQuestion.includes('rÃ©servation') || lowerQuestion.includes('booking')) {
      return "Pour rÃ©server, contactez-nous directement au +225 07 69 69 21 94 ou via WhatsApp. Nous sommes ouverts 24h/24 et 7j/7 pour vous accueillir !";
    }
    
    if (lowerQuestion.includes('chambre') || lowerQuestion.includes('room')) {
      return "Nous proposons 3 types de chambres : Standard, Double et Suite. Toutes nos chambres sont Ã©quipÃ©es de Wi-Fi gratuit, climatisation, tÃ©lÃ©vision Ã  Ã©cran plat, salle de bain privative et service de mÃ©nage quotidien.";
    }
    
    if (lowerQuestion.includes('adresse') || lowerQuestion.includes('oÃ¹') || lowerQuestion.includes('localisation') || lowerQuestion.includes('situÃ©')) {
      return "Nous sommes situÃ©s Ã  Yopougon, Baie des Milliardaires, Abidjan, CÃ´te d'Ivoire. Un cadre paisible et verdoyant, parfait pour vos dÃ©tentes !";
    }
    
    if (lowerQuestion.includes('restaurant') || lowerQuestion.includes('manger') || lowerQuestion.includes('repas') || lowerQuestion.includes('petit-dÃ©jeuner')) {
      return "Nous avons un restaurant et bar sur place proposant une cuisine locale et internationale. Nos spÃ©cialitÃ©s incluent des plats ivoiriens, grillades et poissons frais trÃ¨s apprÃ©ciÃ©s par nos clients !";
    }
    
    if (lowerQuestion.includes('service') || lowerQuestion.includes('Ã©quipement') || lowerQuestion.includes('parking')) {
      return "Nos services incluent : parking privÃ© sÃ©curisÃ©, service de navette/taxi, salle de rÃ©union, rÃ©ception 24h/24, service de blanchisserie et organisation d'excursions locales.";
    }
    
    if (lowerQuestion.includes('paiement') || lowerQuestion.includes('payer') || lowerQuestion.includes('mobile money')) {
      return "Nous acceptons : espÃ¨ces (FCFA), Mobile Money (Orange Money, MTN Money, Moov Money) et carte bancaire.";
    }
    
    if (lowerQuestion.includes('horaire') || lowerQuestion.includes('ouvert') || lowerQuestion.includes('heure')) {
      return "Nous sommes ouverts 24h/24 et 7j/7 pour votre confort ! Check-in Ã  partir de 14h, check-out avant 12h.";
    }
    
    if (lowerQuestion.includes('avis') || lowerQuestion.includes('recommandation') || lowerQuestion.includes('tÃ©moignage')) {
      return "Nos clients nous recommandent ! Keti Mia : 'TrÃ¨s bel accueil, cadre au top ! Rapport qualitÃ© prix excellent !' Brice-Roland Kouassi : 'Cadre doux et paisible parfait pour un retour Ã  la nature. VÃ©ritable voyage culinaire, on se sent en famille et en sÃ©curitÃ©.'";
    }
    
    if (lowerQuestion.includes('wifi') || lowerQuestion.includes('internet')) {
      return "Oui, nous proposons un Wi-Fi gratuit dans toutes nos chambres et espaces communs !";
    }
    
    if (lowerQuestion.includes('famille') || lowerQuestion.includes('enfant') || lowerQuestion.includes('bÃ©bÃ©')) {
      return "Bien sÃ»r ! Nous accueillons les familles avec plaisir. Notre cadre sÃ©curisÃ© et paisible est parfait pour les familles en vacances.";
    }
    
    if (lowerQuestion.includes('contact') || lowerQuestion.includes('tÃ©lÃ©phone') || lowerQuestion.includes('whatsapp')) {
      return "Contactez-nous au +225 07 69 69 21 94 (tÃ©lÃ©phone et WhatsApp). Nous sommes disponibles 24h/24 pour rÃ©pondre Ã  vos questions !";
    }
    
    if (lowerQuestion.includes('bonjour') || lowerQuestion.includes('salut') || lowerQuestion.includes('hello')) {
      return "Bonjour ! Bienvenue Ã  l'HÃ´tel RÃ©sidence Sunday ! ðŸŒŸ Comment puis-je vous aider aujourd'hui ?";
    }
    
    if (lowerQuestion.includes('merci') || lowerQuestion.includes('thank')) {
      return "Je vous en prie ! N'hÃ©sitez pas si vous avez d'autres questions. Nous avons hÃ¢te de vous accueillir Ã  l'HÃ´tel RÃ©sidence Sunday ! ðŸ˜Š";
    }
    
    // RÃ©ponse par dÃ©faut
    return "Je suis lÃ  pour vous renseigner sur l'HÃ´tel RÃ©sidence Sunday ! Vous pouvez me poser des questions sur nos chambres, services, tarifs, localisation, rÃ©servations, restaurant... N'hÃ©sitez pas ! ðŸ˜Š";
  };

  const handleSend = () => {
    if (!inputValue.trim()) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      text: inputValue,
      isBot: false,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputValue('');
    setIsTyping(true);

    // Simulation d'une rÃ©ponse avec dÃ©lai
    setTimeout(() => {
      const botResponse: Message = {
        id: (Date.now() + 1).toString(),
        text: getKnowledgeBaseResponse(inputValue),
        isBot: true,
        timestamp: new Date()
      };
      setMessages(prev => [...prev, botResponse]);
      setIsTyping(false);
    }, 1500);
  };

  return (
    <>
      {/* Bouton flottant */}
      <div className="fixed bottom-6 right-6 z-50">
        <Button
          onClick={() => setIsOpen(true)}
          className={`rounded-full w-16 h-16 shadow-2xl transition-all duration-300 hover:scale-110 ${
            isOpen ? 'scale-0 opacity-0' : 'scale-100 opacity-100'
          } bg-gradient-to-r from-gold to-gold-light hover:shadow-gold animate-pulse`}
          size="lg"
        >
          <MessageCircle className="w-8 h-8 text-navy animate-bounce" />
        </Button>
        
        {/* Badge notification */}
        <div className={`absolute -top-2 -right-2 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center text-white text-xs font-bold animate-ping ${isOpen ? 'hidden' : ''}`}>
          !
        </div>
      </div>

      {/* Interface de chat */}
      <div className={`fixed bottom-6 right-6 z-50 transition-all duration-500 transform ${
        isOpen ? 'scale-100 opacity-100' : 'scale-0 opacity-0'
      }`}>
        <Card className="w-96 h-[500px] shadow-2xl border-2 border-gold/20 bg-gradient-to-b from-white to-accent/10 backdrop-blur-sm">
          {/* Header */}
          <div className="p-4 bg-gradient-to-r from-navy to-navy-light text-white rounded-t-lg">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-gold rounded-full flex items-center justify-center animate-pulse">
                  <Bot className="w-6 h-6 text-navy" />
                </div>
                <div>
                  <h3 className="font-bold text-lg">HÃ´tel RÃ©sidence Sunday</h3>
                  <p className="text-sm opacity-90">Assistant 24/7</p>
                </div>
              </div>
              <Button
                variant="ghost"
                size="sm"
                onClick={() => setIsOpen(false)}
                className="text-white hover:bg-white/20 rounded-full"
              >
                <X className="w-5 h-5" />
              </Button>
            </div>
          </div>

          {/* Messages */}
          <div className="flex-1 p-4 overflow-y-auto h-80 space-y-3">
            {messages.map((message) => (
              <div
                key={message.id}
                className={`flex ${message.isBot ? 'justify-start' : 'justify-end'} animate-fade-in`}
              >
                <div
                  className={`max-w-[80%] p-3 rounded-2xl ${
                    message.isBot
                      ? 'bg-accent/30 text-navy border border-gold/30'
                      : 'bg-gradient-to-r from-gold to-gold-light text-navy shadow-md'
                  } transition-all duration-300 hover:scale-105`}
                >
                  <div className="flex items-start space-x-2">
                    {message.isBot && (
                      <Bot className="w-4 h-4 mt-1 text-gold flex-shrink-0" />
                    )}
                    <p className="text-sm leading-relaxed">{message.text}</p>
                    {!message.isBot && (
                      <User className="w-4 h-4 mt-1 text-navy flex-shrink-0" />
                    )}
                  </div>
                </div>
              </div>
            ))}
            
            {isTyping && (
              <div className="flex justify-start animate-fade-in">
                <div className="bg-accent/30 text-navy border border-gold/30 p-3 rounded-2xl max-w-[80%]">
                  <div className="flex items-center space-x-2">
                    <Bot className="w-4 h-4 text-gold" />
                    <div className="flex space-x-1">
                      <div className="w-2 h-2 bg-gold rounded-full animate-bounce"></div>
                      <div className="w-2 h-2 bg-gold rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
                      <div className="w-2 h-2 bg-gold rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
                    </div>
                  </div>
                </div>
              </div>
            )}
            <div ref={messagesEndRef} />
          </div>

          {/* Input */}
          <div className="p-4 border-t border-gold/20 bg-white/50 backdrop-blur-sm">
            <div className="flex space-x-2">
              <Input
                value={inputValue}
                onChange={(e) => setInputValue(e.target.value)}
                onKeyPress={(e) => e.key === 'Enter' && handleSend()}
                placeholder="ðŸ’¬ Poser une question..."
                className="flex-1 border-2 border-gold/30 focus:border-gold rounded-full px-4"
              />
              <Button
                onClick={handleSend}
                disabled={!inputValue.trim()}
                className="rounded-full w-12 h-12 bg-gradient-to-r from-gold to-gold-light hover:shadow-gold transition-all duration-300 hover:scale-110"
              >
                <Send className="w-5 h-5 text-navy" />
              </Button>
            </div>
            <p className="text-xs text-center mt-2 text-navy/60">
              RÃ©ponses basÃ©es sur les informations de l'hÃ´tel
            </p>
          </div>
        </Card>
      </div>
    </>
  );
};

export default ChatBot;